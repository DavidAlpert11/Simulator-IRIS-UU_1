function update_pose_des(Command,Control,NavState)

errorPose = norm(NavState.X- Command.Pose_des_GF(Command.index_Pose_des_GF,1:3));
conditionErrorPos = errorPose < Command.Tolerance_pose_des(1,1);

errorPsi =  abs(Command.psi_meas-Command.psi_des);
conditionErrorPsi = errorPsi < Command.Tolerance_pose_des(1,2);

if (conditionErrorPos && conditionErrorPsi) %Finsish current command

    L=length(Command.Pose_des_GF(:,1));
    if (Command.index_Pose_des_GF<L)
        Command.index_Pose_des_GF = Command.index_Pose_des_GF+1;
        Control.init = 0;
        
%         display([num2str(Command.index_Pose_des_GF/L*100),'%']);
%         display (sum(Command.POIChecked))
    else
        if (Scenario.mode==0)
            Command.Finish_pose_command=0;
        else
            Command.Finish_pose_command = 1;
        end
    end
end

init = Command.Pose_des_GF(Command.index_Pose_des_GF-1,1:4);
goal = Command.Pose_des_GF(Command.index_Pose_des_GF,1:4);
desire_pose = init+(goal-init);
normCommand =norm(desire_pose(1:3) - NavState.X);
if (normCommand>Command.LimitCommand)
    desire_pose(1:3) = (Command.LimitCommand/normCommand)*(desire_pose(1:3) - NavState.X)+NavState.X;
    Command.init = 0;
end
Command.X_des_GF = desire_pose(1);         % desired value of X in Global frame
Command.Y_des_GF = desire_pose(2);       % desired value of Y in Global frame
Command.Z_des_GF = desire_pose(3);        % desired value of Z in Global frame
Command.psi_des = desire_pose(4);
end
